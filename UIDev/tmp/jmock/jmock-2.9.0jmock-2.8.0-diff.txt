digraph prof {
ratio = fill;
node [style=filled];
"org.jmock.internal.InvocationExpectationBuilder:addSideEffect" -> "org.jmock.internal.InvocationExpectation:addSideEffect" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:scheduleWithFixedDelay" -> "org.jmock.lib.concurrent.internal.DeltaQueue:add" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.internal.FakeObjectMethods:fakeToString" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.internal.FakeObjectMethods:fakeEquals" [color=black];
"org.jmock.lib.script.ScriptedAction:defineParameters" -> "org.jmock.api.Invocation:getParameter" [color=black];
"org.jmock.api.Invocation:applyTo" -> "org.jmock.api.Invocation:getParametersAsArray" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.internal.FakeObjectMethods:fakeHashCode" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.Mockery:setDefaultResultForType" -> "org.jmock.internal.ReturnDefaultValueAction:addResult" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:scheduleAtFixedRate" -> "org.jmock.lib.concurrent.DeterministicScheduler:scheduleWithFixedDelay" [color=black];
"org.jmock.lib.script.ScriptedAction:defineParameters" -> "org.jmock.api.Invocation:getParameterCount" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.internal.FakeObjectMethods:fakeFinalize" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:tick" -> "org.jmock.lib.concurrent.internal.DeltaQueue:tick" [color=black];
"org.jmock.api.ExpectationError:describeTo" -> "org.jmock.api.ExpectationError:getMessage" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:withNoArguments" -> "org.jmock.internal.InvocationExpectationBuilder:with" [color=black];
"org.jmock.lib.concurrent.internal.DeltaQueue:isNotEmpty" -> "org.jmock.lib.concurrent.internal.DeltaQueue:isEmpty" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.api.Invocation:getParameter" [color=black];
"org.jmock.internal.InvocationExpectation:describeMethod" -> "org.jmock.internal.Cardinality:describeTo" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:setCardinality" -> "org.jmock.internal.InvocationExpectation:setCardinality" [color=black];
"org.jmock.internal.ReturnDefaultValueAction:invoke" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:method" -> "org.jmock.internal.InvocationExpectation:setMethodMatcher" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:createExpectationFrom" -> "org.jmock.api.Invocation:getParametersAsArray" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:createExpectationFrom" -> "org.jmock.internal.InvocationExpectation:setParametersMatcher" [color=black];
"org.jmock.internal.InvocationExpectation:invoke" -> "org.jmock.api.Invocation:checkReturnTypeCompatibility" [color=black];
"org.jmock.Mockery:mismatchDescribing" -> "org.jmock.api.ExpectationError:getStackTrace" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:with" -> "org.jmock.internal.InvocationExpectation:setParametersMatcher" [color=black];
"org.jmock.internal.InvocationExpectation:describeMismatch" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:toExpectation" -> "org.jmock.internal.InvocationExpectation:setDefaultAction" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:runNextPendingCommand" -> "org.jmock.lib.concurrent.internal.DeltaQueue:pop" [color=black];
"org.jmock.Mockery:dispatch" -> "org.jmock.api.ExpectationError:getStackTrace" [color=black];
"org.jmock.internal.InvocationExpectation:describeTo" -> "org.jmock.internal.InvocationExpectation:isSatisfied" [color=black];
"org.jmock.internal.InvocationExpectation:allowsMoreInvocations" -> "org.jmock.internal.Cardinality:allowsMoreInvocations" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:tick" -> "org.jmock.lib.concurrent.DeterministicScheduler:runUntilIdle" [color=black];
"org.jmock.internal.InvocationDiverter:invoke" -> "org.jmock.api.Invocation:applyTo" [color=black];
"org.jmock.lib.script.ScriptedAction:defineParameters" -> "org.jmock.api.Invocation:getInvokedObject" [color=black];
"org.jmock.auto.internal.Mockomatic:autoMock" -> "org.jmock.Mockery:mock" [color=black];
"org.jmock.internal.InvocationExpectation:matches" -> "org.jmock.api.Invocation:getParametersAsArray" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:of" -> "org.jmock.internal.InvocationExpectation:setObjectMatcher" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:isIdle" -> "org.jmock.lib.concurrent.internal.DeltaQueue:isEmpty" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:addOrderingConstraint" -> "org.jmock.internal.InvocationExpectation:addOrderingConstraint" [color=black];
"org.jmock.lib.concurrent.DeterministicExecutor:runUntilIdle" -> "org.jmock.lib.concurrent.DeterministicExecutor:runPendingCommands" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:checkParameterMatcherCount" -> "org.jmock.api.Invocation:getParameterCount" [color=black];
"org.jmock.lib.concurrent.DeterministicExecutor:runUntilIdle" -> "org.jmock.lib.concurrent.DeterministicExecutor:isIdle" [color=black];
"org.jmock.internal.FakeObjectMethods:invoke" -> "org.jmock.api.Invocation:getInvokedObject" [color=black];
"org.jmock.internal.InvocationExpectation:describeMismatch" -> "org.jmock.api.Invocation:getParametersAsArray" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:createExpectationFrom" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.lib.action.ThrowAction:invoke" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.api.ExpectationError:describeTo" -> "org.jmock.api.Invocation:describeTo" [color=black];
"org.jmock.auto.internal.Mockomatic:autoInstantiateSequence" -> "org.jmock.Mockery:sequence" [color=black];
"org.jmock.auto.internal.Mockomatic:autoInstantiateStates" -> "org.jmock.Mockery:states" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:createExpectationFrom" -> "org.jmock.internal.InvocationExpectation:setMethod" [color=black];
"org.jmock.internal.StateMachine:startsAs" -> "org.jmock.internal.StateMachine:become" [color=black];
"org.jmock.Mockery:mismatchDescribing" -> "org.jmock.api.ExpectationError:getMessage" [color=black];
"org.jmock.internal.InvocationExpectation:matches" -> "org.jmock.api.Invocation:getInvokedObject" [color=black];
"org.jmock.internal.InvocationExpectation:matches" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:setAction" -> "org.jmock.internal.InvocationExpectation:setAction" [color=black];
"org.jmock.internal.NamedSequence:constrainAsNextInSequence" -> "org.jmock.internal.InvocationExpectation:addOrderingConstraint" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:submit" -> "org.jmock.lib.concurrent.DeterministicScheduler:schedule" [color=black];
"org.jmock.internal.InvocationExpectationBuilder:captureExpectedObject" -> "org.jmock.internal.InvocationExpectation:setObjectMatcher" [color=black];
"org.jmock.internal.InvocationExpectation:matches" -> "org.jmock.internal.InvocationExpectation:allowsMoreInvocations" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:schedule" -> "org.jmock.lib.concurrent.internal.DeltaQueue:add" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:runUntilIdle" -> "org.jmock.lib.concurrent.DeterministicScheduler:runNextPendingCommand" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:runNextPendingCommand" -> "org.jmock.lib.concurrent.internal.DeltaQueue:add" [color=black];
"org.jmock.Mockery:mismatchDescribing" -> "org.jmock.api.ExpectationError:setStackTrace" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:tick" -> "org.jmock.lib.concurrent.internal.DeltaQueue:isNotEmpty" [color=black];
"org.jmock.internal.ProxiedObjectIdentity:fakeToString" -> "org.jmock.internal.ProxiedObjectIdentity:toString" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:execute" -> "org.jmock.lib.concurrent.DeterministicScheduler:schedule" [color=black];
"org.jmock.Mockery:setImposteriser" -> "org.jmock.internal.ReturnDefaultValueAction:setImposteriser" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:isIdle" -> "org.jmock.lib.concurrent.internal.DeltaQueue:delay" [color=black];
"org.jmock.internal.InvocationDiverter:invoke" -> "org.jmock.api.Invocation:getInvokedMethod" [color=black];
"org.jmock.internal.InvocationExpectation:isSatisfied" -> "org.jmock.internal.Cardinality:isSatisfied" [color=black];
"org.jmock.lib.concurrent.DeterministicScheduler:runUntilIdle" -> "org.jmock.lib.concurrent.DeterministicScheduler:isIdle" [color=black];
"org.jmock.Mockery:assertIsSatisfied" -> "org.jmock.internal.InvocationDispatcher:isSatisfied" [color=red];
"org.jmock.Expectations:allowing" -> "org.jmock.Expectations:atLeast" [color=red];
"org.jmock.Mockery:describeMismatch" -> "org.jmock.internal.InvocationDispatcher:describeMismatch" [color=red];
"org.jmock.Mockery:states" -> "org.jmock.internal.InvocationDispatcher:newStateMachine" [color=red];
"org.jmock.Expectations:checkLastExpectationWasFullySpecified" -> "org.jmock.internal.InvocationExpectationBuilder:checkWasFullySpecified" [color=red];
"org.jmock.Mockery:dispatch" -> "org.jmock.internal.InvocationDispatcher:dispatch" [color=red];
"org.jmock.Expectations:buildExpectations" -> "org.jmock.internal.InvocationExpectationBuilder:toExpectation" [color=red];
"org.jmock.Expectations:addParameterMatcher" -> "org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Expectations:inSequence" -> "org.jmock.internal.InvocationExpectationBuilder:addInSequenceOrderingConstraint" [color=red];
"org.jmock.Expectations:will" -> "org.jmock.internal.InvocationExpectationBuilder:setAction" [color=red];
"org.jmock.Expectations:initialiseExpectationCapture" -> "org.jmock.internal.InvocationExpectationBuilder:setCardinality" [color=red];
"org.jmock.Expectations:will" -> "org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Expectations:then" -> "org.jmock.internal.InvocationExpectationBuilder:addSideEffect" [color=red];
"org.jmock.Expectations:addParameterMatcher" -> "org.jmock.internal.InvocationExpectationBuilder:addParameterMatcher" [color=red];
"org.jmock.Expectations:inSequences" -> "org.jmock.Expectations:inSequence" [color=red];
"org.jmock.Expectations:one" -> "org.jmock.Expectations:oneOf" [color=red];
"org.jmock.Expectations:ignoring" -> "org.jmock.Expectations:allowing" [color=red];
"org.jmock.Expectations:when" -> "org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Mockery:addExpectation" -> "org.jmock.internal.InvocationDispatcher:add" [color=red];
"org.jmock.Expectations:oneOf" -> "org.jmock.Expectations:exactly" [color=red];
"org.jmock.Expectations:inSequence" -> "org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Expectations:never" -> "org.jmock.Expectations:exactly" [color=red];
"org.jmock.Expectations:then" -> "org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Expectations:when" -> "org.jmock.internal.InvocationExpectationBuilder:addOrderingConstraint" [color=red];
"org.jmock.AbstractExpectations:with" -> "org.jmock.AbstractExpectations:addParameterMatcher" [color=green];
"org.jmock.AbstractExpectations:ignoring" -> "org.jmock.AbstractExpectations:allowing" [color=green];
"org.jmock.AbstractExpectations:one" -> "org.jmock.AbstractExpectations:oneOf" [color=green];
"org.jmock.AbstractExpectations:when" -> "org.jmock.AbstractExpectations:currentBuilder" [color=green];
"org.jmock.AbstractExpectations:when" -> "org.jmock.internal.InvocationExpectationBuilder:addOrderingConstraint" [color=green];
"org.jmock.AbstractExpectations:buildExpectations" -> "org.jmock.internal.InvocationExpectationBuilder:toExpectation" [color=green];
"org.jmock.AbstractExpectations:inSequence" -> "org.jmock.AbstractExpectations:currentBuilder" [color=green];
"org.jmock.AbstractExpectations:addParameterMatcher" -> "org.jmock.internal.InvocationExpectationBuilder:addParameterMatcher" [color=green];
"org.jmock.AbstractExpectations:then" -> "org.jmock.AbstractExpectations:currentBuilder" [color=green];
"org.jmock.AbstractExpectations:will" -> "org.jmock.AbstractExpectations:currentBuilder" [color=green];
"org.jmock.AbstractExpectations:never" -> "org.jmock.AbstractExpectations:exactly" [color=green];
"org.jmock.AbstractExpectations:addParameterMatcher" -> "org.jmock.AbstractExpectations:currentBuilder" [color=green];
"org.jmock.AbstractExpectations:oneOf" -> "org.jmock.AbstractExpectations:exactly" [color=green];
"org.jmock.AbstractExpectations:allowing" -> "org.jmock.AbstractExpectations:atLeast" [color=green];
"org.jmock.AbstractExpectations:inSequence" -> "org.jmock.internal.InvocationExpectationBuilder:addInSequenceOrderingConstraint" [color=green];
"org.jmock.AbstractExpectations:checkLastExpectationWasFullySpecified" -> "org.jmock.internal.InvocationExpectationBuilder:checkWasFullySpecified" [color=green];
"org.jmock.AbstractExpectations:then" -> "org.jmock.internal.InvocationExpectationBuilder:addSideEffect" [color=green];
"org.jmock.AbstractExpectations:inSequences" -> "org.jmock.AbstractExpectations:inSequence" [color=green];
"org.jmock.AbstractExpectations:initialiseExpectationCapture" -> "org.jmock.internal.InvocationExpectationBuilder:setCardinality" [color=green];
"org.jmock.AbstractExpectations:will" -> "org.jmock.internal.InvocationExpectationBuilder:setAction" [color=green];
"org.jmock.internal.InvocationExpectation:setAction" [color=gray];
"org.jmock.internal.FakeObjectMethods:fakeFinalize" [color=gray];
"org.jmock.auto.internal.Mockomatic:autoInstantiateSequence" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:with" [color=gray];
"org.jmock.internal.Cardinality:describeTo" [color=gray];
"org.jmock.internal.InvocationExpectation:describeTo" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:of" [color=gray];
"org.jmock.lib.concurrent.DeterministicExecutor:runUntilIdle" [color=gray];
"org.jmock.internal.FakeObjectMethods:fakeEquals" [color=gray];
"org.jmock.api.Invocation:getParameterCount" [color=gray];
"org.jmock.internal.NamedSequence:constrainAsNextInSequence" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:method" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:isEmpty" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:toExpectation" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:scheduleAtFixedRate" [color=gray];
"org.jmock.internal.ReturnDefaultValueAction:setImposteriser" [color=gray];
"org.jmock.api.ExpectationError:describeTo" [color=gray];
"org.jmock.lib.concurrent.DeterministicExecutor:runPendingCommands" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:runUntilIdle" [color=gray];
"org.jmock.internal.FakeObjectMethods:fakeHashCode" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:delay" [color=gray];
"org.jmock.auto.internal.Mockomatic:autoInstantiateStates" [color=gray];
"org.jmock.internal.Cardinality:isSatisfied" [color=gray];
"org.jmock.api.Invocation:applyTo" [color=gray];
"org.jmock.internal.FakeObjectMethods:fakeToString" [color=gray];
"org.jmock.api.Invocation:checkReturnTypeCompatibility" [color=gray];
"org.jmock.internal.FakeObjectMethods:invoke" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:tick" [color=gray];
"org.jmock.api.Invocation:getParameter" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:addSideEffect" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:setAction" [color=gray];
"org.jmock.internal.InvocationDiverter:invoke" [color=gray];
"org.jmock.lib.concurrent.DeterministicExecutor:isIdle" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:isNotEmpty" [color=gray];
"org.jmock.api.Invocation:getInvokedMethod" [color=gray];
"org.jmock.Mockery:mock" [color=gray];
"org.jmock.internal.InvocationExpectation:setMethod" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:isIdle" [color=gray];
"org.jmock.api.Invocation:describeTo" [color=gray];
"org.jmock.internal.InvocationExpectation:matches" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:add" [color=gray];
"org.jmock.internal.InvocationExpectation:setCardinality" [color=gray];
"org.jmock.internal.InvocationExpectation:isSatisfied" [color=gray];
"org.jmock.internal.InvocationExpectation:setMethodMatcher" [color=gray];
"org.jmock.internal.StateMachine:startsAs" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:checkWasFullySpecified" [color=gray];
"org.jmock.api.ExpectationError:getStackTrace" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:addInSequenceOrderingConstraint" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:createExpectationFrom" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:schedule" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:submit" [color=gray];
"org.jmock.Mockery:sequence" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:captureExpectedObject" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:scheduleWithFixedDelay" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:tick" [color=gray];
"org.jmock.internal.InvocationExpectation:describeMismatch" [color=gray];
"org.jmock.internal.ProxiedObjectIdentity:fakeToString" [color=gray];
"org.jmock.lib.action.ThrowAction:invoke" [color=gray];
"org.jmock.lib.concurrent.internal.DeltaQueue:pop" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:setCardinality" [color=gray];
"org.jmock.internal.InvocationExpectation:invoke" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:withNoArguments" [color=gray];
"org.jmock.internal.ReturnDefaultValueAction:invoke" [color=gray];
"org.jmock.api.ExpectationError:setStackTrace" [color=gray];
"org.jmock.auto.internal.Mockomatic:autoMock" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:runNextPendingCommand" [color=gray];
"org.jmock.internal.StateMachine:become" [color=gray];
"org.jmock.api.Invocation:getInvokedObject" [color=gray];
"org.jmock.internal.InvocationExpectation:addOrderingConstraint" [color=gray];
"org.jmock.lib.script.ScriptedAction:defineParameters" [color=gray];
"org.jmock.Mockery:mismatchDescribing" [color=gray];
"org.jmock.internal.InvocationExpectation:describeMethod" [color=gray];
"org.jmock.internal.InvocationExpectation:setObjectMatcher" [color=gray];
"org.jmock.Mockery:states" [color=gray];
"org.jmock.api.Invocation:getParametersAsArray" [color=gray];
"org.jmock.api.ExpectationError:getMessage" [color=gray];
"org.jmock.internal.InvocationExpectation:allowsMoreInvocations" [color=gray];
"org.jmock.internal.Cardinality:allowsMoreInvocations" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:addOrderingConstraint" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:addParameterMatcher" [color=gray];
"org.jmock.internal.InvocationExpectation:setDefaultAction" [color=gray];
"org.jmock.internal.ProxiedObjectIdentity:toString" [color=gray];
"org.jmock.internal.ReturnDefaultValueAction:addResult" [color=gray];
"org.jmock.Mockery:setImposteriser" [color=gray];
"org.jmock.Mockery:dispatch" [color=gray];
"org.jmock.internal.InvocationExpectation:setParametersMatcher" [color=gray];
"org.jmock.internal.InvocationExpectation:addSideEffect" [color=gray];
"org.jmock.internal.InvocationExpectationBuilder:checkParameterMatcherCount" [color=gray];
"org.jmock.lib.concurrent.DeterministicScheduler:execute" [color=gray];
"org.jmock.Mockery:setDefaultResultForType" [color=gray];
"org.jmock.Expectations:exactly" [color=red];
"org.jmock.Expectations:when" [color=red];
"org.jmock.Expectations:checkLastExpectationWasFullySpecified" [color=red];
"org.jmock.Expectations:addParameterMatcher" [color=red];
"org.jmock.Expectations:atLeast" [color=red];
"org.jmock.internal.InvocationDispatcher:newStateMachine" [color=red];
"org.jmock.Expectations:oneOf" [color=red];
"org.jmock.internal.InvocationDispatcher:describeMismatch" [color=red];
"org.jmock.Expectations:ignoring" [color=red];
"org.jmock.Expectations:allowing" [color=red];
"org.jmock.Expectations:initialiseExpectationCapture" [color=red];
"org.jmock.Expectations:currentBuilder" [color=red];
"org.jmock.Expectations:inSequence" [color=red];
"org.jmock.Mockery:describeMismatch" [color=red];
"org.jmock.Expectations:then" [color=red];
"org.jmock.internal.InvocationDispatcher:add" [color=red];
"org.jmock.internal.InvocationDispatcher:isSatisfied" [color=red];
"org.jmock.Expectations:will" [color=red];
"org.jmock.Expectations:buildExpectations" [color=red];
"org.jmock.Mockery:addExpectation" [color=red];
"org.jmock.internal.InvocationDispatcher:dispatch" [color=red];
"org.jmock.Expectations:never" [color=red];
"org.jmock.Expectations:inSequences" [color=red];
"org.jmock.Expectations:one" [color=red];
"org.jmock.Mockery:assertIsSatisfied" [color=red];
"org.jmock.AbstractExpectations:then" [color=green];
"org.jmock.AbstractExpectations:inSequences" [color=green];
"org.jmock.AbstractExpectations:checkLastExpectationWasFullySpecified" [color=green];
"org.jmock.AbstractExpectations:one" [color=green];
"org.jmock.AbstractExpectations:when" [color=green];
"org.jmock.AbstractExpectations:never" [color=green];
"org.jmock.AbstractExpectations:ignoring" [color=green];
"org.jmock.AbstractExpectations:initialiseExpectationCapture" [color=green];
"org.jmock.AbstractExpectations:addParameterMatcher" [color=green];
"org.jmock.AbstractExpectations:will" [color=green];
"org.jmock.AbstractExpectations:inSequence" [color=green];
"org.jmock.AbstractExpectations:oneOf" [color=green];
"org.jmock.AbstractExpectations:buildExpectations" [color=green];
"org.jmock.AbstractExpectations:atLeast" [color=green];
"org.jmock.AbstractExpectations:exactly" [color=green];
"org.jmock.AbstractExpectations:allowing" [color=green];
"org.jmock.AbstractExpectations:with" [color=green];
"org.jmock.AbstractExpectations:currentBuilder" [color=green];
}
